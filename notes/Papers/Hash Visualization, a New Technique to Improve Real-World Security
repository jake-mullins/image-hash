http://users.ece.cmu.edu/~adrian/projects/validation/validation.pdf
2 Human limitations
    Inability to remember good secure passwords
    Inability to compare strings
        - Good XKCD (Correct Horse Battery Lightbulb) comic about this on my boss's desk. IS that really the best way to make a secure password? If so, that could be a good project, to visualize such a thing.
        - Strong/good password mean passwords that can't be socially engineered
        - Meaningless passwords mean hashs, that make a LOT more sense to a computer comparing bits than a human comparing characters
        - People are much better at comparing meaningFUL strings
        - People are good at comparing pictures
    
What is the Handbook of Applied Cryptography?
Look into 
[10] Alfred J. Menezes, Paul van Oorschot, and Scott
Vanstone. Handbook of Applied Cryptography. CRC
Press, 1997.

Hash function h is 
    Compression 
        Maps x of arbitrary length to h(x) fixed amount
    Ease of computation
        h(x) is always easy to compute
    Preimage resistance
        Cannot hash to any inputs possible inputs
        input x and y
        h(x) != y
        How could prevent this, unless restricting inputs that are apart of the possible output space, i.e. no inputs that are the same length as an output
        Non-reversible
    2nd-preimage resistance
        h(x) != h(h(x))
    Collision resistance
        no h(x) == h(y)
        How is this different from preimage resistance?

For a visual hash function h1
    Maps arbitrary x to finite h1(x)
    Easy to compute

If two images h1 and h2 are perceptually indistinguishable
    h1~h2

How to quantify similarity
Find delta δ function for comparing similarity: I * I -> R
Find threshold β: find δ(I1, I2) >= β
What is a good δ function? This paper was written many moons ago, so research on that is likely way more advanced

REGULARITY PROPERTY
Shapes that are easily recognizable include primitives such as 
    - Circles
    - Quadrilaterals
    - Regular Polygons
    - Ovals
Non-recognizable include
    - White noise
Regular images contain mostly recognizable shapes
To test if an image is regular 
    - Compression is easy because lots of patterns and not much noise
    - Something about frequency spectra IDFK man

For security purposes
if x1 = x2
h1(x1) ~= h1(x2)

Random Art(tm) is 
    - take string s
    - use s as seed for random generator
    - random generator is used to to generate a function
    - For a 50 x 50 picture, function needs to be sampled 2500 times
Random Art:
    F: [-1,1]^2 -> [-1,1]^3
    Maps x,y to r,g,b values
    in modern implementations if resolution is 100 by 100:
    F1: [0,100]^2 -> [0,255]^3
    If F(x,y) -> F(x,x,x)
    It produces a gray grade
    If F(x,y) -> F(x,y,x)
    Only has rank of 2 in color-space (I got a C in linear Algebra)
    if xy > 0 then (x,y,1) else (fmod(x,y),fmod(x,y),fmod(x,))

    F can also be an expression tree G with depth d
    Pseudocode time
    Pseudocode for RandomArt(G,i,d)
        G: is a Grammar [r1,r2,...rn]
        i: initial rule
        d: depth
    Output Expression E
1       Suppose ri = [(a1,p1) ... (ak,pk)]
2       If d <= 0 then let a = a1 then go to line 4
3       Let a be one of (a1, ... ak) and ai has probability pi
4       If a is a terminal rule, let E = a and go to line 6
5       Suppose a = f(ri1, ... , rim) where m is the arity of f
6       Return E

For security purposes, a "Correct" key must be transmitted over a secure non-network channel. Possibly just scp, paper uses example of the New York times"

In Root Key validation, a host must verify a key came from a CA Certificate Authority
If a user can look at two different pictures, one for the REAL key coming from the newspaper/secure channel, and one generated by the host, it can verify if the host is exactly the same

Could associate image keys displayed on advertisements with certain programs, like a checksum on a linux package (Is package the correct word?)
Infrequently used passwords are normally the ones for super high level stuff that NEEDS to be protected, so are the most likely to be written down

The researchers present the idea of an image portfolio, a small library of images that a user must memorize. This could be a good idea.
Potentially hold n images, and in the authentication process, show m >= n
transform(m, n) = n! / ((n - m)! * m!) combinations, which is a lot more than a 4 digit PIN
         (20,5) = 5! / ((5 - 20)! * 20!) = 15504
        4 digit pin is 10^4 = 10000
        PINs are amazingly insecure, most of them are birthdays, and can be observed from a distance

For this scheme to work, images must be shown in a SECURE WAY where literally no-one else can view them or worse, take a picture

Fighting pre-image attacks is easy
Fighting collisions is real hard.
    - When using the expression tree method, you run up against problems dealing with commutative properties of addition + and multiplication *, which is unfortunate, as removing them entirely would probably reduce the complexity of bruteforcing the hash.   
    - Because of this, the authors could not formally prove that the Expression Tree method does not satisfy Hash requirement
Using the Birthday paradox, they can experimentally check for the difficulty of collision using 
N: Total possible images/"image space"
n: total number of experimental images
m: total number of collisions
P(N, n, m) => (n - 1, m) (N! / (N^(n - m - 1) * (N - n + m + 1)!)) * ((n - m) / N) ^ m

After getting samples si (1 <=  i <= n):
    Suppose for now r = n
    |    I HAVE NO IDEA WHAT THIS MEANS 
    v
    P(N, n, m) = (BIG PI 1 <= i <= n)   {
                                            r / N       :if si new, r = r -1
                                            (N - r) / N :else si is a collision
                                        }

Future work
    - Implementation of a prototype system, where one user memorizes a couple of pictures. Upon authentication, a user must choose from a set of pictures.
    - Strengthen Random Art algorithm
    - Evaluate how many perceptually different images can be generated

    BRING MEANING TO A SECURE PASSWORD

Questions:
Look into Random Art by Andrej Bauer
Learn more/review expression trees
What the heck is a grammar? http://kilby.stanford.edu/~rvg/154/handouts/grammars.html, for now, just think of it as a set of rules
What is the [(a1,p1) ... (ak,pk)]? Does that mean that every "rule" is a combination of an atomic unit? 
    PARTIAL ANSWER: a1 is assigned a probability p1
What the hell is arity?
    PARTIAL ANSWER: # of args taken by a function